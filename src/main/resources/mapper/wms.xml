<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wms">

    <update id="addTask" parameterType="HashMap">
        insert into task(kid, invoices_code, type, total, status) values (#{kid},#{invoices_code}, #{type}, #{total}, #{status})
    </update>

    <!-- 收到指令任务时获取任务列表 -->
    <select id="queryListTask" resultType="HashMap">
        select
            td.kid,
            td.falg,
            td.invoices_code,
            td.item_code,
            td.item_name,
            td.item_total,
            td.item_storage_code,
            sp.point,
            td.userId
        from task_detail td
        left join storage_point sp on sp.item_storage_code = td.item_storage_code
        where td.status = 1
    </select>

    <!--有人确认接任务后重新获取任务列表-->
    <select id="getListTask" resultType="HashMap" parameterType="String">
        select
            lt.kid,
            lt.falg,
            lt.invoices_code,
            lt.item_code,
            lt.item_name,
            lt.item_total,
            lt.item_storage_code,
            lt.point,
            rt.kid userId
        from (
        select
            td.kid,
            td.falg,
            td.invoices_code,
            td.item_code,
            td.item_name,
            td.item_total,
            td.item_storage_code,
            sp.point
        from task_detail td
        left join storage_point sp on sp.item_storage_code = td.item_storage_code
        where td.status = 1) lt
        left join
        (select tdl.kid from task_detail tdl where tdl.kid = #{kid} and tdl.falg = 1) rt on lt.kid = rt.kid
    </select>

    <update id="addTaskDetail" parameterType="ArrayList">
        INSERT INTO task_detail (
        <foreach collection="list" item="item" index="index">
            <trim suffixOverrides=",">
                <if test="index==0">
                    <if test="item.kid != null and item.kid != ''">kid,</if>
                    <if test="item.task_id != null and item.task_id != ''">task_id,</if>
                    <if test="item.invoices_code != null and item.invoices_code != ''">invoices_code,</if>
                    <if test="item.item_code != null and item.item_code != ''">item_code,</if>
                    <if test="item.item_name != null and item.item_name != ''">item_name,</if>
                    <if test="item.item_total != null and item.item_total != ''">item_total,</if>
                    <if test="item.item_storage_code != null and item.item_storage_code != ''">item_storage_code</if>
                </if>
            </trim>
        </foreach>
        ) VALUES
        <foreach collection="list" item="item" index="index" separator="," >
            (
            <trim suffixOverrides=",">
                <if test="item.kid != null and item.kid != ''">#{item.kid},</if>
                <if test="item.task_id != null and item.task_id != ''">#{item.task_id},</if>
                <if test="item.invoices_code != null and item.invoices_code != ''">#{item.invoices_code},</if>
                <if test="item.item_code != null and item.item_code != ''">#{item.item_code},</if>
                <if test="item.item_name != null and item.item_name != ''">#{item.item_name},</if>
                <if test="item.item_total != null and item.item_total != ''">#{item.item_total},</if>
                <if test="item.item_storage_code != null and item.item_storage_code != ''">#{item.item_storage_code}</if>
            </trim>
            )
        </foreach>
    </update>

    <select id="getTaskData" resultType="HashMap">
        select kid, invoices_code, type, total, status, flag, gmt_create from task where flag = 0 order by gmt_create desc LIMIT 1
    </select>

    <select id="getListDetail" resultType="HashMap" parameterType="String">
        select td.invoices_code,td.item_code,td.item_name,td.item_total,td.item_storage_code,sp.point from task_detail td
        left join storage_point sp on sp.item_storage_code = td.item_storage_code
        where task_id = #{kid}
    </select>

    <!-- 更改状态已推送 -->
    <update id="updateFlag" parameterType="String">
        update task set flag = 1 where kid = #{kid} and flag = 0
    </update>

    <update id="addStoragePoint" parameterType="HashMap">
        insert into storage_point(kid, item_storage_code, point) VALUES (#{kid},#{item_storage_code},#{point})
    </update>

    <select id="getStoragePoint" resultType="HashMap" parameterType="ArrayList">
        select item_storage_code,point
        from storage_point
        where item_storage_code in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="getData" resultType="HashMap" parameterType="HashMap">
        select item_storage_code, point,DATE_FORMAT(gmt_create,'%Y-%m-%d %H:%i') gmt_create from storage_point order by gmt_create desc
    </select>

    <update id="editStatus" parameterType="HashMap">
        UPDATE task_detail set status = #{status} where invoices_code = #{invoices_code} and item_code = #{item_code} LIMIT 1
    </update>

    <!-- 更新有人接了这个任务 -->
    <update id="confirm" parameterType="HashMap">
        update task_detail
        set falg = 1,userId=#{userId}
        where
          kid = #{kid} and falg = 0 and status = 1
        limit 1
    </update>

    <select id="queryFlag" resultType="Integer" parameterType="String">
        select falg from task_detail where kid = #{kid} LIMIT 1
    </select>

    <select id="getListData" resultType="HashMap" parameterType="HashMap">
        select kid,item_storage_code,point,DATE_FORMAT(gmt_create,'%Y-%m-%d %H:%i') gmt_create from storage_point
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="item_storage_code != null">
                AND item_storage_code LIKE CONCAT(#{item_storage_code},'%')
            </if>
        </trim>
        <choose>
            <when test="order != null and column != null">
                ORDER BY ${column} ${order}
            </when>
            <otherwise>
                ORDER BY gmt_create DESC
            </otherwise>
        </choose>
        LIMIT #{section},#{pageSize}
    </select>
    <select id="getListTotal" resultType="Integer" parameterType="HashMap">
        SELECT count(kid) total from storage_point
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="item_storage_code != null">
                AND item_storage_code LIKE CONCAT(#{item_storage_code},'%')
            </if>
        </trim>
    </select>

    <!-- 编辑 -->
    <update id="edit" parameterType="HashMap">
        update storage_point set item_storage_code = #{item_storage_code} ,point = #{point} where kid = #{kid} LIMIT 1
    </update>

    <!-- 删除 -->
    <update id="delById" parameterType="HashMap">
        delete from storage_point where kid = #{kid} LIMIT 1
    </update>

    <!--批量删除-->
    <update id="delByKeys" parameterType="ArrayList">
        DELETE FROM storage_point WHERE KID IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>
