<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="floor_humiture">

    <update id="add" parameterType="HashMap">
        INSERT INTO FLOOR_HUMITURE(KID,floorId,code,cameraId) VALUES (#{kid},#{floorId},#{code},#{cameraId})
    </update>

    <update id="edit" parameterType="HashMap">
        UPDATE FLOOR_HUMITURE
        <trim prefix="SET" suffixOverrides=",">
            <if test="floorId != null">floorId = #{floorId},</if>
            <if test="code != null">code = #{code},</if>
            <if test="cameraId != null">cameraId = #{cameraId}</if>
        </trim>
        WHERE KID = #{kid} LIMIT 1
    </update>

    <update id="delById" parameterType="String">
        DELETE FROM FLOOR_HUMITURE WHERE KID = #{kid} LIMIT 1
    </update>

    <update id="delByKeys" parameterType="ArrayList">
        DELETE FROM FLOOR_HUMITURE WHERE KID IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <sql id="where_list_data">
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="name != null">
                lt.label LIKE CONCAT(#{name},'%')
            </if>
        </trim>
    </sql>

    <select id="getListData" resultType="HashMap" parameterType="HashMap">
        select fc.kid,fc.floorId,fc.code,fc.cameraId,lt.label ,lt.name from FLOOR_HUMITURE fc
        left join floor fr on fr.kid = fc.floorId
        left join (select fa.kid value,CONCAT(fr.name,as_.name) label,fr.name from floor_area fa
        left join areas as_ on as_.kid = fa.areaId
        left join floor fr on fr.kid = fa.floorId) lt on lt.value = fc.floorId
        <include refid="where_list_data"/>
        <choose>
            <when test="order != null and column != null">
                ORDER BY ${column} ${order}
            </when>
            <otherwise>
            </otherwise>
        </choose>
        LIMIT #{section},#{pageSize}
    </select>

    <select id="getListTotal" resultType="Integer" parameterType="HashMap">
        SELECT count(fc.kid) total from FLOOR_HUMITURE fc
        left join floor fr on fr.kid = fc.floorId
        left join (select fa.kid value,CONCAT(fr.name,as_.name) label,fr.name from floor_area fa
        left join areas as_ on as_.kid = fa.areaId
        left join floor fr on fr.kid = fa.floorId order by fr.sort,as_.name) lt on lt.value = fc.floorId
        <include refid="where_list_data"/>
    </select>

    <!-- 获取全部温湿度设备 -->
    <select id="allData" resultType="HashMap" parameterType="HashMap">
        select code,cameraId deviceId from floor_humiture
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="deviceId != null">
                cameraId = #{deviceId}
            </if>
        </trim>
    </select>
</mapper>